import 'dart:io';
import 'dart:isolate';

void main() {
  print('Welcome to the CLI Application! Type a command or "quit" to exit.');

  ReceivePort receivePort = ReceivePort();

  // Start the CLI isolate
  Isolate.spawn(cliIsolate, receivePort.sendPort);

  // Start the server isolate
  Isolate.spawn(serverIsolate, receivePort.sendPort);

  // Wait for user input to exit
  stdin.readLineSync();

  // Close the receive port and terminate isolates
  receivePort.close();
}

void cliIsolate(SendPort sendPort) {
  // Set up communication with the main isolate
  ReceivePort receivePort = ReceivePort();
  sendPort.send(receivePort.sendPort);

  // Listen for messages from the main isolate
  receivePort.listen((message) {
    if (message == 'quit') {
      print('Goodbye from CLI!');
      receivePort.close();
    }
  });

  while (true) {
    stdout.write('CLI >> ');
    String? input = stdin.readLineSync()?.toLowerCase().trim();

    if (input == 'quit') {
      sendPort.send('quit');
      break;
    } else if (input == 'date') {
      DateTime currentDate = DateTime.now();
      print(
          'Current date: ${currentDate.year}-${currentDate.month}-${currentDate.day}');
    } else if (input == 'time') {
      DateTime currentTime = DateTime.now();
      print(
          'Current time: ${currentTime.hour}:${currentTime.minute}:${currentTime.second}');
    } else {
      print('Invalid command. Try again!');
    }
  }
}

void serverIsolate(SendPort sendPort) {
  // Set up communication with the main isolate
  ReceivePort receivePort = ReceivePort();
  sendPort.send(receivePort.sendPort);

  // Listen for messages from the main isolate
  receivePort.listen((message) {
    if (message == 'quit') {
      print('Goodbye from Server!');
      receivePort.close();
    }
  });

  // Start a simple server
  HttpServer.bind('localhost', 8765).then((server) {
    print('Server listening on localhost:8765');

    server.listen((HttpRequest request) {
      request.response.write('Hello from server!');
      request.response.close();
    });
  });
}
