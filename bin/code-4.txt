import 'dart:io';
import 'dart:async';
import 'dart:isolate';

void main() {
  final receivePort = ReceivePort();
  Isolate? timeIsolate;
  Isolate? dateIsolate;

  stdout.writeln('Welcome to the Dart Shell!');
  stdout.writeln("Type 'quit' to exit.");

  while (true) {
    stdout.write('> ');
    final input = stdin.readLineSync();

    if (input == 'quit') {
      timeIsolate?.kill();
      dateIsolate?.kill();
      break;
    } else if (input == 'time') {
      timeIsolate = Isolate.run(runTimeIsolate, receivePort.sendPort);
      final timePort = ReceivePort();
      receivePort.send(['time', timePort.sendPort]);
      final time = await timePort.first;
      stdout.writeln('Current time: $time');
    } else if (input == 'date') {
      dateIsolate = Isolate.run(runDateIsolate, receivePort.sendPort);
      final datePort = ReceivePort();
      receivePort.send(['date', datePort.sendPort]);
      final date = await datePort.first;
      stdout.writeln('Current date: $date');
    } else {
      stdout.writeln('Invalid command.');
    }
  }

  receivePort.close();
}

void runTimeIsolate(SendPort sendPort) {
  final receivePort = ReceivePort();
  sendPort.send(receivePort.sendPort);

  receivePort.listen((message) {
    if (message[0] == 'time') {
      final time = DateTime.now().toLocal().toString();
      message[1].send(time);
    }
  });
}

void runDateIsolate(SendPort sendPort) {
  final receivePort = ReceivePort();
  sendPort.send(receivePort.sendPort);

  receivePort.listen((message) {
    if (message[0] == 'date') {
      final date = DateTime.now().toLocal().toIso8601String();
      message[1].send(date);
    }
  });
}
